# Title: Add Two Numbers
# Submission ID: 1399717090
# Status: Accepted
# Date: September 23, 2024 at 09:03:45 PM GMT+5:30

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        dummy=ListNode(0)
        current=dummy
        carry = 0
        
        while l1 or l2 or carry:
            # Get the values of the current nodes, or 0 if the list is exhausted
            val1 = l1.val if l1 else 0
            val2 = l2.val if l2 else 0

            # Calculate the sum and carry
            total = val1 + val2 + carry
            carry = total // 10  # Calculate the carry for the next iteration
            current.next = ListNode(total % 10)  # Create a new node for the current digit

            # Move pointers forward
            current = current.next
            if l1: l1 = l1.next
            if l2: l2 = l2.next

        return dummy.next  # Return the next node after the dummy, which is the start of the result list
        